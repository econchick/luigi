[tox]
envlist = cdh, hdp, nonhdfs, gcloud, postgres, unixsocket, visualiser, scheduler, docs, flake8
skipsdist = True

[base]
usedevelop = True
deps =
  mock<2.0
  nose<2.0
  unittest2<2.0
passenv =
  USER HOME TRAVIS_BUILD_ID TRAVIS TRAVIS_BRANCH TRAVIS_JOB_NUMBER TRAVIS_PULL_REQUEST TRAVIS_JOB_ID TRAVIS_REPO_SLUG TRAVIS_COMMIT CI
setenv =
  LC_ALL = en_US.utf-8
  LUIGI_CONFIG_PATH = {toxinidir}/test/testconfig/luigi.cfg
  PIP_DOWNLOAD_CACHE = $HOME/.pip-cache
commands =
  python --version


[core]
usedevelop = {[base]usedevelop}
install_command = pip install {opts} {packages}
deps =
  moto<1.0
  HTTPretty==0.8.10
  boto<3.0
  sqlalchemy<2.0
  elasticsearch<2.0.0
  psutil<4.0
  enum34>1.1.0
  coverage>=3.6,<3.999
  codecov>=1.4.0
  requests<3.0
  pygments
  hypothesis[datetime]
passenv = {[base]passenv}
setenv =
  {[base]setenv}
  COVERAGE_PROCESS_START = {toxinidir}/.coveragerc
commands =
  {[base]commands}
  coverage run test/runtests.py -v --ignore-files='(^\.|^_|^setup\.py$)' \
                                   --ignore-files=not_imported.py
  coverage combine
  codecov -e TOXENV

[testenv:cdh]
usedevelop = {[core]usedevelop}
install_command = {[core]install_command}
deps =
  snakebite>=2.5.2,<2.6.0
  hdfs>=2.0.4,<3.0.0  # The webhdfs library
  {[core]deps}
passenv =
  JAVA_HOME {[core]passenv}
setenv =
  FULL_COVERAGE = true
  HADOOP_DISTRO = cdh
  HADOOP_HOME = {toxinidir}/.tox/hadoop-cdh
  NOSE_ATTR = minicluster
  {[core]setenv}
commands =
  {toxinidir}/scripts/ci/setup_hadoop_env.sh
  {[core]commands}


[testenv:hdp]
usedevelop = {[core]usedevelop}
install_command = {[core]install_command}
deps =
  snakebite>=2.5.2,<2.6.0
  hdfs>=2.0.4,<3.0.0  # The webhdfs library
  {[core]deps}
passenv =
  JAVA_HOME {[core]passenv}
setenv =
  FULL_COVERAGE = true
  HADOOP_DISTRO=hdp
  HADOOP_HOME={toxinidir}/.tox/hadoop-hdp
  NOSE_ATTR=minicluster
  {[core]setenv}
commands =
  {toxinidir}/scripts/ci/setup_hadoop_env.sh
  {[core]commands}


[testenv:scheduler]
usedevelop = {[core]usedevelop}
install_command = {[core]install_command}
deps = {[core]deps}
passenv = {[core]passenv}
setenv =
  FULL_COVERAGE = true
  NOSE_ATTR=scheduler
  {[core]setenv}
commands =
  {[core]commands}


[testenv:gcloud]
usedevelop = {[core]usedevelop}
install_command = {[core]install_command}
deps =
  google-api-python-client>=1.4.0,<2.0
  {[core]deps}
passenv = {[core]passenv}
setenv =
  FULL_COVERAGE = true
  GCS_TEST_PROJECT_ID=luigi-travistestenvironment
  GCS_TEST_BUCKET=luigi-travistestenvironment
  GOOGLE_APPLICATION_CREDENTIALS=test/gcloud-credentials.json
  NOSE_ATTR=gcloud
  {[core]setenv}
commands =
  {[core]commands}


[testenv:postgres]
usedevelop = {[core]usedevelop}
install_command = {[core]install_command}
deps =
  psycopg2<3.0
  {[core]deps}
passenv =
  POSTGRES_USER {[core]passenv}
setenv =
  FULL_COVERAGE = true
  NOSE_ATTR=postgres
  {[core]setenv}
commands =
  {[core]commands}


[testenv:nonhdfs]
usedevelop = {[core]usedevelop}
install_command = {[core]install_command}
deps = {[core]deps}
passenv = {[core]passenv}
setenv =
  FULL_COVERAGE = true
  NOSE_EVAL_ATTR=not minicluster and not gcloud and not postgres and not unixsocket
  NOSE_WITH_DOCTEST=1
  {[core]setenv}
commands =
  {[core]commands}


[testenv:unixsocket]
usedevelop = {[core]usedevelop}
install_command = {[core]install_command}
deps =
  requests-unixsocket<1.0
  {[core]deps}
passenv = {[core]passenv}
setenv =
  FULL_COVERAGE = true
  NOSE_ATTR=unixsocket
  {[core]setenv}
commands =
  {[core]commands}


[testenv:visualiser]
usedevelop = True
deps = {[base]deps}
passenv = {[base]passenv}
setenv =
  NOSE_EVAL_ATTR=not minicluster and not gcloud and not postgres and not unixsocket
  TEST_VISUALISER=1
  {[base]setenv}
commands =
  {[base]commands}
  nosetests -v --tests=test/visualiser

[testenv:flake8]
deps =
  pep8==1.5.7  # latest fails right now
  flake8
setenv =
  PYTHONHASHSEED = 1
commands =
  python --version
  flake8 --max-line-length=160 --exclude=doc,luigi/six.py
  flake8 --max-line-length=100 --ignore=E265 doc


[testenv:docs]
# Build documentation using sphinx.
# Call this using `tox -e docs`.
usedevelop = True
deps =
  sqlalchemy
  Sphinx>=1.3b1
  sphinx_rtd_theme
commands =
    # build API docs
    sphinx-apidoc -o doc/api -T luigi --separate

    # build HTML docs
    sphinx-build -W -b html -d {envtmpdir}/doctrees doc doc/_build/html


[testenv:autopep8]
deps = autopep8
commands = autopep8 --ignore E309,E501 -a -i -r luigi test examples bin

[testenv:isort]
deps = isort
commands = isort -w 120 -rc luigi test examples bin
